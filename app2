import streamlit as st
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from catboost import CatBoostRegressor
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

st.title("Приложение для обучения catboost, random forest, linear regression")

st.sidebar.header("Настройки генерации данных")
n_samples = st.sidebar.slider("Количество образцов", min_value=100, max_value=1000, value=500)
n_features = st.sidebar.slider("Количество признаков", min_value=1, max_value=10, value=5) # Исправлена ошибка с запятой

X = np.random.rand(n_samples, n_features)
y = X @ np.random.rand(n_features) + 0.1 * np.random.randn(n_samples)

data = pd.DataFrame(X, columns=[f"Feature_{i}" for i in range(n_features)])
data["Target"] = y
st.write("Сгенерированные данные:")
st.write(data.head())

model_name = st.sidebar.selectbox("Выберите модель", ["CatBoost", "RandomForest", "LinearRegression"])

if st.button("Обучить модель"):
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    if model_name == "CatBoost":
        model = CatBoostRegressor(verbose=0)
    elif model_name == "RandomForest":
        model = RandomForestRegressor()
    else:
        model = LinearRegression()

    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    mse = mean_squared_error(y_test, y_pred)

    st.write(f"Метрика MSE на тестовой выборке: {mse}")

    fig, ax = plt.subplots()
    ax.scatter(y_test, y_pred, label="Предсказания", color="red", alpha=0.5)
    ax.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color="blue", linestyle="--", label="Аппроксимация")
    ax.legend()
    ax.set_xlabel("Истинные значения")
    ax.set_ylabel("Предсказания")
    ax.set_title("График предсказаний vs Истинные значения")
    st.pyplot(fig)
    plt.clf()  # Очистить фигуру после st.pyplot()
